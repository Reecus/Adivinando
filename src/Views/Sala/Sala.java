/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Sala;

import Controllers.SalaController;
import Models.BusinessObject.*;
import java.awt.Color;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Bruno
 */
public class Sala extends javax.swing.JFrame {
    BOJugador jugadorPrin;
    BOSala sala;
    ArrayList<_Categoria> categoriaItems;
    _Chat chat;

    public Sala(BOJugador jugador, BOSala sala) {
        this.jugadorPrin = jugador;
        this.sala = sala;
        initComponents();
    }

    /**
     * Creates new form Sala
     */
    public Sala() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlJugadores = new javax.swing.JPanel();
        pnlTablero = new javax.swing.JPanel();
        pnlCategorias = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        pnlPersonajes = new javax.swing.JPanel();
        pnlDescriptor = new javax.swing.JPanel();
        pnlChat = new javax.swing.JPanel();
        pnlPersonaje = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                cargarVista(evt);
            }
        });

        pnlJugadores.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlJugadoresLayout = new javax.swing.GroupLayout(pnlJugadores);
        pnlJugadores.setLayout(pnlJugadoresLayout);
        pnlJugadoresLayout.setHorizontalGroup(
            pnlJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlJugadoresLayout.setVerticalGroup(
            pnlJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
        );

        pnlTablero.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Esperando a que todos est√©n listos!");

        javax.swing.GroupLayout pnlCategoriasLayout = new javax.swing.GroupLayout(pnlCategorias);
        pnlCategorias.setLayout(pnlCategoriasLayout);
        pnlCategoriasLayout.setHorizontalGroup(
            pnlCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCategoriasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCategoriasLayout.setVerticalGroup(
            pnlCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCategoriasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pnlPersonajes.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlPersonajesLayout = new javax.swing.GroupLayout(pnlPersonajes);
        pnlPersonajes.setLayout(pnlPersonajesLayout);
        pnlPersonajesLayout.setHorizontalGroup(
            pnlPersonajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 771, Short.MAX_VALUE)
        );
        pnlPersonajesLayout.setVerticalGroup(
            pnlPersonajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 368, Short.MAX_VALUE)
        );

        scroll.setViewportView(pnlPersonajes);

        javax.swing.GroupLayout pnlTableroLayout = new javax.swing.GroupLayout(pnlTablero);
        pnlTablero.setLayout(pnlTableroLayout);
        pnlTableroLayout.setHorizontalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(pnlCategorias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTableroLayout.setVerticalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        pnlDescriptor.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlChatLayout = new javax.swing.GroupLayout(pnlChat);
        pnlChat.setLayout(pnlChatLayout);
        pnlChatLayout.setHorizontalGroup(
            pnlChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
        );
        pnlChatLayout.setVerticalGroup(
            pnlChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlPersonajeLayout = new javax.swing.GroupLayout(pnlPersonaje);
        pnlPersonaje.setLayout(pnlPersonajeLayout);
        pnlPersonajeLayout.setHorizontalGroup(
            pnlPersonajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlPersonajeLayout.setVerticalGroup(
            pnlPersonajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlDescriptorLayout = new javax.swing.GroupLayout(pnlDescriptor);
        pnlDescriptor.setLayout(pnlDescriptorLayout);
        pnlDescriptorLayout.setHorizontalGroup(
            pnlDescriptorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDescriptorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDescriptorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlPersonaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDescriptorLayout.setVerticalGroup(
            pnlDescriptorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDescriptorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPersonaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Buxton Sketch", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Jugadores:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(pnlTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDescriptor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlDescriptor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarVista(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_cargarVista
        // TODO add your handling code here:
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        this.setVisible(true);
        ArrayList<BOJugador> jugadores = SalaController.obtenerJugadoresSala(sala.getId());
        pintarJugadores(jugadores);
    }//GEN-LAST:event_cargarVista

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sala().setVisible(true);
            }
        });
    }
    
    private void pintarJugadores(ArrayList<BOJugador> jugadores){
        pnlJugadores.setLayout(new GridLayout(jugadores.size() + 2,1));
        
        for(BOJugador jugador : jugadores){
            if(jugador.getIdJugador() == jugadorPrin.getIdJugador()){
                _JugadorItem main = new _JugadorItem(this);
                main.setLblUserText(jugador.getNombre());
                main.setAsPlayer();
                pnlJugadores.add(main);
            }
            else{
                _JugadorItemSecundario item = new _JugadorItemSecundario();
                item.setLblUserText(jugador.getNombre());
                pnlJugadores.add(item);
            }
        }
        
        this.setVisible(true);
    }
    
    private void pintarJugadoresDos(ArrayList<BOJugador> jugadores){
        pnlJugadores.setLayout(new GridLayout(jugadores.size() + 2,1));
        
        for(BOJugador jugador : jugadores){
            if(jugador.getIdJugador() == jugadorPrin.getIdJugador()){
                _JugadorItem main = new _JugadorItem(this);
                main.setLblUserText(jugador.getNombre());
                main.setAsPlayer();
                main.deleteChk();
                pnlJugadores.add(main);
            }
            else{
                _JugadorItemSecundario item = new _JugadorItemSecundario();
                item.setLblUserText(jugador.getNombre());
                item.deleteChk();
                pnlJugadores.add(item);
            }
        }
        
        this.setVisible(true);
    }
    
    public void setListo(boolean listo){
        if(SalaController.setListo(jugadorPrin,listo)){
            ArrayList<BOJugador> jugadores = SalaController.obtenerJugadoresSala(sala.getId());
            pnlJugadores.removeAll();
            pintarJugadoresDos(jugadores);
            mostrarCategorias();
        }
    }
    
    public void mostrarCategorias(){
        JOptionPane.showMessageDialog(this, "Tienen 5 segundos para votar por una categor√≠a!");
        categoriaItems = new ArrayList<_Categoria>();
        pnlCategorias.removeAll();
        pnlCategorias.setLayout(new GridLayout(1,3));
        ArrayList<BOCategoria> categorias = SalaController.obtenerCategorias();
        for(BOCategoria cat : categorias){
            _Categoria item = new _Categoria(this,cat);
            categoriaItems.add(item);
            pnlCategorias.add(item);
        }
        this.setVisible(true);
        new java.util.Timer().schedule( 
                new java.util.TimerTask() {
                    @Override
                    public void run() {
                        // your code here
                        SalaController.mostrarCatGanadora();
                    }
                }, 
                5000
        );
        pnlCategorias.revalidate();
        pnlCategorias.repaint();
    }
    
    public void mostrarPersonajes(ArrayList<BOPersonaje> personajes){
        JOptionPane.showMessageDialog(this, "Elige un personaje para describir");
        pintarPersonajes(personajes);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pnlCategorias;
    private javax.swing.JPanel pnlChat;
    private javax.swing.JPanel pnlDescriptor;
    private javax.swing.JPanel pnlJugadores;
    private javax.swing.JPanel pnlPersonaje;
    private javax.swing.JPanel pnlPersonajes;
    private javax.swing.JPanel pnlTablero;
    private javax.swing.JScrollPane scroll;
    // End of variables declaration//GEN-END:variables

    public void mostrarDescriptor(BOJugador descriptor) {
        JOptionPane.showMessageDialog(this, "Tu eres el descriptor, " + descriptor.getNombre() + "!");
        if(jugadorPrin.getRol() == 1){
            SalaController.mostrarPersonajes();
        }
    }

    void votarPorCategoria(BOCategoria categoria) {
        SalaController.votarPorCategoria(categoria, sala.getId());
        for(_Categoria catItem : categoriaItems){
            if(catItem.categoria.getIdCategoria() != categoria.getIdCategoria()){
                catItem.btnDisable();
            }
        }
    }

    public void mostrarCategoriaGanadora(BOCategoria catGanadora) {
        JOptionPane.showMessageDialog(this, "Jugaremos con la categor√≠a " + catGanadora.getDescripcion() + "!");
    }

    private void pintarPersonajes(ArrayList<BOPersonaje> personajes) {
        pnlPersonajes.setBounds(0,0,3000, (int) this.getBounds().getHeight());
        pnlPersonajes.setLayout(new GridLayout(4,3));
        
        for(BOPersonaje personaje : personajes){
            _Personaje item = new _Personaje(this,personaje);
            pnlPersonajes.add(item);
        }
        
        this.setVisible(true);
    }

    void setPersonajeDescriptor(BOPersonaje personaje) {
        if(SalaController.setPersonaje(personaje,sala.getId())){
            mostrarChat();
        }
        if(jugadorPrin.getRol() == 1){
            sala.setPersonaje(personaje);
            mostrarPersonaje();
        }
    }

    private void mostrarChat() {
        pnlChat.setVisible(true);
        pnlChat.setLayout(new GridLayout(1,1));
        _Chat chatView = new _Chat(this);
        this.chat = chatView;
        pnlChat.add(chatView);
        this.setVisible(true);
    }

    public boolean ingresarIntento(String text) {
        boolean adivino = false;
        //if(jugadorPrin.getRol() == 0){
            if(text == null ? sala.getPersonaje().getNombre() == null : text.equals(sala.getPersonaje().getNombre())){
                SalaController.registrarPuntos(sala,jugadorPrin);
                chat.ingresarMensaje(jugadorPrin.getNombre() + " adivin√≥ al personaje!",new Color(0,0,255));
                jugadorPrin.setRol(0);
                adivino = true;
                SalaController.definirDescriptor(sala.getId());
            }
        //}
        return adivino;
    }

    private void mostrarPersonaje() {
        pnlPersonaje.setLayout(new GridLayout(1,1));
        _PersonajeDesc personaje = new _PersonajeDesc(sala.getPersonaje());
        pnlPersonaje.add(personaje);
        pnlPersonaje.setVisible(true);
        pnlPersonaje.revalidate(); // to invoke the layout managers
        pnlPersonaje.repaint(); // sometimes needed
    }
}
